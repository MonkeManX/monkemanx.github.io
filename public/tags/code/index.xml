<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on </title>
    <link>http://localhost:1313/tags/code/</link>
    <description>Recent content in Code on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Aug 2024 22:40:50 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Agentless: Demystifying LLM-based Software Engineering Agents</title>
      <link>http://localhost:1313/paper-summary/agentless/</link>
      <pubDate>Sat, 24 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/paper-summary/agentless/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Paper Title:&lt;/strong&gt; Agentless: Demystifying LLM-based Software Engineering Agents&lt;br&gt;&#xA;&lt;strong&gt;Link to Paper:&lt;/strong&gt; &lt;a href=&#34;https://arxiv.org/abs/2407.01489&#34;&gt;https://arxiv.org/abs/2407.01489&lt;/a&gt; &lt;br&gt;&#xA;&lt;strong&gt;Date:&lt;/strong&gt; 1. Jurly 2024&lt;br&gt;&#xA;&lt;strong&gt;Paper Type:&lt;/strong&gt; LLM, Code-generation&lt;br&gt;&#xA;&lt;strong&gt;Short Abstract:&lt;/strong&gt;  &lt;br&gt;&#xA;Recently, there have been made many advancements in the field of autonomous software development using large language models (LLMs). Most of this progress has been driven by &lt;em&gt;agents&lt;/em&gt;. These agents are equipped with tools that allow them to run commands, observe the codebase, and plan future actions. However, these agents come with significant complexity. This paper poses the question: &lt;em&gt;Do we really need all this complexity?&lt;/em&gt;&#xA;&lt;em&gt;Agentless&lt;/em&gt; is an approach to solving software development tasks without the use of agents. It operates in a two-phase process: identifying the buggy code and then repairing it. &lt;em&gt;Agentless&lt;/em&gt; is cost-effective to execute and achieves a high score of 27% on SWE-Bench.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AutoCodeRover: Autonomous Program Improvement</title>
      <link>http://localhost:1313/paper-summary/autocoderover_llm_github/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/paper-summary/autocoderover_llm_github/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Paper Title:&lt;/strong&gt; AutoCodeRover: Autonomous Program Improvement&lt;br&gt;&#xA;&lt;strong&gt;Link to Paper:&lt;/strong&gt; &lt;a href=&#34;https://arxiv.org/abs/2404.05427&#34;&gt;https://arxiv.org/abs/2404.05427&lt;/a&gt;&lt;br&gt;&#xA;&lt;strong&gt;Date:&lt;/strong&gt; 8. April 2024&lt;br&gt;&#xA;&lt;strong&gt;Paper Type:&lt;/strong&gt; LLM, Code-generation&lt;br&gt;&#xA;&lt;strong&gt;Short Abstract:&lt;/strong&gt; &lt;br&gt;&#xA;LLMs have already been extensively used in easing the workload of developers. In this paper the authors proposed AutoCodeRover a framework to automatically solve GitHub issues. In this framework LLMs are combined with code search algorithm&amp;rsquo;s. They use Abstract syntax trees instead of rare files.&lt;/p&gt;&#xA;&lt;h1 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Automating software developing has for a long time been a vision of engineers. Specifically, the authors of the paper, focused on bug fixing and feature addition.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
